JENKINS ===> 

apt update && Upgrade

java install 		>> 17 or 21 is good for jenkins currently   >> Documentation page for steps > https://www.jenkins.io/doc/book/installing/linux/
			1 ==>  	apt install openjdk-17-jre-headless			>> JRE
						apt install openjdk-17-jdk-headless			>> JDK
			
			2==> 		curl -fsSL https://pkg.jenkins.io/debian/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyrings.asc > /dev/null		>> if error
			2==> 		sudo wget -O /etc/apt/keyrings/jenkins-keyring.asc  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key		>> recommended
			
			3==> echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian binary/" | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null			>> if error
			3==> echo "deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null		>> recommended
			
			4==>     apt install jenkins 
						apt update && upgrade -y
						
			5==> systemctl status jenkins
						Log in using the password on server port 8080 && create a project to build
					
	Extra Jenkins:
	Continous intergration   ==>    for repo 	https://github.com/spring-projects/spring-petclinic
	Error may come if no git is installed properly:     (Error performing git command: git ls-remote -h  https://github.com/spring-projects/spring-petclinic HEAD )
			
			6==>     apt install maven 		>> Build Tool   (Once the project will be available in pom.xml  )    or location /var/lib/jenkins/workspace/project-1 CI/target/
																								# This project Spring will work on 8080. Need to stop Jenkins and run the  pet clinic project
												# output App/software will be in location workspace>target>  filename.jar
												# This can be deployed in Windows or Linux as below war file method below. (java -jar spring.jar 	(port may work if dev is not defined or ignore port in such case)		 --httpPort==8084)



Note==>
 -fsSL flags:
-f: Fail silently on HTTP errors
-s: Silent mode (no progress meter)
-S: Show errors (useful with -s)
-L: Follow redirects
tee: A safer way to write to protected files, especially in pipes. Only the tee part needs sudo, not the whole curl command.
> /dev/null: Suppresses terminal output from tee.



Method 2==> War file Approach:
			Step 1==> Download War File from the  link >
				https://updates.jenkins-ci.org/download/war/
			
			Step 2==> Paste the downloaded file in the C drive by creating a name bin or xyz.
				Open cmd in the folder and run the command as below.
					To run Jar file ==> java -jar jenkins.war --httpPort==8082     >> (java -jar  filename.war  --httpPort==port no)
					
					linux ==> java -jar filename.jar --server.port==8084
					

Method 3 ==>  Docker-based.



